version: '3.3'

services:
  mysql:
    container_name: mysql8
    image: mysql:8.0
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_USER: admin
      MYSQL_PASSWORD: 12345678
      MYSQL_DATABASE: develop
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql1
    # networks:
    #   - my_network

  # nodejs:
  #   # build: .
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   # dùng build bên dưới thì chi tiết hơn, có đường dẫn tới file Dockerfile. Có thể sử dụng  "build: ."
  #   container_name: nodejs_container
  #   ports:
  #     - '3000:3000'
  #   # ánh xạ cổng 3000 trên pc : cổng 3000 trên container
  #   depends_on:
  #     - mysql
  #     # depends_on xác định thứ tự khởi động, đợi mysql khởi động xong mới tới nodejs
  #   # networks:
  #   #   - my_network
  #   environment:
  #     PORT: 3000
  #     DB_HOST: mysql # Sử dụng tên của service MySQL trong Docker Compose
  #     DB_PORT: 3306
  #     # Các environment được khai báo ở đây sẽ đề nên các env trong file .env, ưu tiên cao hơn.
  #     # Thay vì localhost thì db_host khi dùng docker sẽ là tên service "mysql" hoặc dùng địa chỉ ipv4 public của máy tính.
  #   volumes:
  #     - ./:/usr/src/app
  #     # Mount thư mục hiện tại với thư mục /usr/src/app trong container. Giúp chia sẻ mã nguồn, khi save code => code trong docker cũng thay đổi
  #   command: bash -c "npm install && npm run dev"
volumes:
  mysql_data:
# Đặt volumes để quản lý và khởi tạo nếu không có. Volume mysql_data được định nghĩa để đảm bảo rằng dữ liệu MySQL không bị mất khi container bị xóa.
# networks:
#   my_network:
#     driver: bridge
# Mặc định docker compose sẽ tạo ra 1 network dùng chung giữa các container nên không cần phải khai báo.
